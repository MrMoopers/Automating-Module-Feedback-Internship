{"version":"0.2.0","body":"function main(workbook: ExcelScript.Workbook, moduleId: string = \"CMP6002B\", surveyType: number = 1, academicYear:string = '2021-2022') {\n  //Assumption: Sheets are ordered:\n  // Module Criteria , Mid Module Spec. , End of Module Spec.\n  // Module Criteria - Determines which staff the survey will generate questions for. Currently this is required by End Module spec., but not by mid module spec.\n  // Mid Module Spec. - Determines the questions specified for the middle of the module survey. \n  // End Module Spec. - Determines the questions specified for the end of the module survey.\n\n  // surveyType - number determines the type of survey created. 1 = mid module, 2 = end module.\n\n  //Module Criteria\n  let sheet = workbook.getWorksheets()[0]; //workbook.getWorksheet(\"Sheet1\");\n  let data = sheet.getTables()[0].getRangeBetweenHeaderAndTotal().getValues();\n  let dataHeaders = sheet.getTables()[0].getHeaderRowRange().getValues();\n\n  //Find the row for the selected moduleId\n  let moduleRow = -1;\n  do {\n    moduleRow++;\n  } while (moduleRow < data.length && data[moduleRow][0] != moduleId)\n  let moduleName = data[moduleRow][1];\n\n  //Mid / End Module Specification\n  let sheet_survey = workbook.getWorksheets()[surveyType]; //workbook.getWorksheet(\"Sheet1\");\n  let data_survey = sheet_survey.getTables()[0].getRangeBetweenHeaderAndTotal().getValues();\n  let dataHeaders_survey = sheet_survey.getTables()[0].getHeaderRowRange().getValues();\n\n  let html = '';\n  let questions:Array<string> = [];\n\n  let htmlTemplateStart = `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Web form</title>\n    <style>\n     body {\n      background-color: #F6F6F6;\n      font-family: Verdana;\n      text-align: center;\n      width: 100%;\n    }\n\n    tr:nth-child(even) {\n      background-color: #f2f2f2;\n    }\n\n    \n    form {\n      background-color: #FBFCFC;\n      max-width: 500px;\n      margin: 50px auto;\n      padding: 30px 30px 30px 20px;\n      box-shadow: 2px 5px 10px rgba(0, 0, 0, 0.5);\n    }\n\n    form th {\n      font-weight: bold;\n    }\n\n    textarea {\n      width: 90%;\n    }\n\n    \n/* Styling Button */\nbutton {\n  background-color: #00aef0;\n  border: 1px solid #777;\n  border-radius: 2px;\n  font-family: inherit;\n  font-size: 21px;\n  display: block;\n  width: 100%;\n  margin-top: 50px;\n  margin-bottom: 20px;\n  \n}\n\n    @media \nonly screen and (max-width: 760px),\n(min-device-width: 768px) and (max-device-width: 1024px)  {\n  \n  .radio-table table, \n  .radio-table thead, \n  .radio-table tbody,\n  .radio-table th, \n  .radio-table td, \n  .radio-table tr {\n      display: block !important;\n  }\n      \n  .radio-table th {\n      padding-left: 6px !important;\n      font-weight: bold !important;\n\n  }\n  \n  .radio-table thead tr {\n      position: absolute !important;\n      top: -9999px;\n      left: -9999px;\n  }\n  \n  .radio-table tr {\n      border: 1px solid #ccc !important;\n  }\n  \n  .radio-table td {\n      border: none !important;\n      border-bottom: 1px solid #eee !important;\n      position: relative !important;\n      padding-left: 50% !important;\n      margin-top: 5px;\n      margin-bottom: 5px;\n  }\n  \n  .radio-table td:before {\n      position: absolute !important;\n      /* top: 6px !important; */\n      left: 6px !important;\n      width: 45% !important;\n      padding-right: 10px !important;\n      white-space: nowrap !important;\n  }\n  \n  .radio-table td:nth-of-type(2):before {\n      content: \"Strongly Disagree\";\n  }\n  \n  .radio-table td:nth-of-type(3):before {\n      content: \"Disagree\";\n  }\n  \n  .radio-table td:nth-of-type(4):before {\n      content: \"Neutral\";\n  }\n  \n  .radio-table td:nth-of-type(5):before {\n      content: \"Agree\";\n  }\n  \n  .radio-table td:nth-of-type(6):before {\n      content: \"Strongly Agree\";\n  }\n}\n}\n</style></head><body><h1> [${moduleId}] ${moduleName} - ${dataHeaders_survey[0][1]}</h1><form action=\"https://prod-161.westeurope.logic.azure.com:443/workflows/c94642a3df8b4b259fb2a04f9fccc2a0/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=NU5qzs5sASZHrBssWMu052fCcX-3zn5uxcOPstV4NYM\" method=\"POST\"><input type=\"hidden\" name=\"ModuleId\" value=\"${moduleId}\" /><input type=\"hidden\" name=\"SurveyType\" value=\"${surveyType}\" /><input type=\"hidden\" name=\"AcademicYear\" value=\"${academicYear}\" />`;\n\n  let htmlTemplateEnd = '<button type=\"submit\">Submit</button></form></body></html>';\n  let likertTemplateStart = '<table class=\"radio-table\"><thead><tr><th>Question</th><th>Strongly Disagree</th><th>Disagree</th><th>Neither Agree or Disagree</th><th>Agree</th><th>Strongly Agree</th></tr></thead><tbody>';\n  let likertTemplateEnd = '</tbody></table>';\n  let questionHtml = '';\n\n  html += htmlTemplateStart;\n\n  let lastQuestionType = '';\n  let i = 0;\n  while (i < data_survey.length) {\n    let questionType = data_survey[i][0];\n    let questionText = data_survey[i][1];\n\n    if (questionType == 'Likert') {\n      questionHtml = `<tr><td>${questionText}</td><td><input type=\"radio\" value=\"1\" name=\"question${(i + 1)}\" required/></td><td><input type=\"radio\" value=\"2\" name=\"question${(i + 1)}\" required/></td><td><input type=\"radio\" value=\"3\" name=\"question${(i + 1)}\" required/></td><td><input type=\"radio\" value=\"4\" name=\"question${(i + 1)}\" required/></td><td><input type=\"radio\" value=\"5\" name=\"question${(i + 1)}\" required/></td></tr>`;\n\n      if (lastQuestionType != 'Likert') {\n        //Create a new table for this new Likert.\n        html += likertTemplateStart;\n        html += questionHtml;\n      }\n      else {\n        //Add question to the existing table.\n        html += questionHtml;\n      }\n\n      questions.push(questionText.toString());\n    }\n    else if (questionType == 'Text') {\n      //Add a textbox input.\n      if (lastQuestionType == 'Likert') {\n        html += likertTemplateEnd;\n      }\n\n      questionHtml = `<div><h2>Please provide any additional comments below:</h2><br><label for=\"html\">${questionText}</label><br><textarea rows=\"3\" cols=\"50\" name=\"additionalComments${(i + 1)}\" placeholder=\"...\"></textarea></div>`;\n\n      html += questionHtml;\n\n      questions.push(questionText.toString() + '*');\n    }\n    else {\n      //When 'Likert-Person' or 'Text-Person' is reached, only staff questions remain. Break from this loop and start the generation of the staff questions.\n      break;\n    }\n\n    lastQuestionType = questionType;\n    i++;\n  }\n\n  //Handling Staff questions:\n  let numberQuestionsPerPerson = data_survey.length - i ; // - 1\n  let questionNumber = 0;\n  let peopleCount = 0;\n\n  //Index 3 is when staff in the Module Criteria Table starts. (After ModuleId and ModuleName).\n  for (let a = 3; a < dataHeaders[0].length; a++) {\n    let name = data[moduleRow][a];\n\n    if (name.toString().length > 0) {\n      for (let b = i; b < data_survey.length; b++) {\n        let questionType = data_survey[b][0];\n        let questionText = data_survey[b][1];\n\n        questionNumber = b + (peopleCount * numberQuestionsPerPerson)  + 1;\n\n        if (questionType == 'Likert-Person') {\n          questionHtml = `<tr><td>${questionText}</td><td><input type=\"radio\" value=\"1\" name=\"question${questionNumber}\" required/></td><td><input type=\"radio\" value=\"2\" name=\"question${questionNumber}\" required/></td><td><input type=\"radio\" value=\"3\" name=\"question${questionNumber}\" required/></td><td><input type=\"radio\" value=\"4\" name=\"question${questionNumber}\" required/></td><td><input type=\"radio\" value=\"5\" name=\"question${questionNumber}\" required/></td></tr>`;\n\n          if (lastQuestionType != 'Likert-Person') {\n            //Create a new table for this new Likert-Person.\n            html += `<br><br><br><label>For ${name}, please rate the following: </label><br>` + likertTemplateStart;\n            html += questionHtml;\n          }\n          else {\n            //Add question to the existing table.\n            html += questionHtml;\n          }\n\n          questions.push(`(${name}) ${questionText.toString()}`);\n        }\n        else if (questionType == 'Text-Person') {\n          //Add a textbox input.\n          if (lastQuestionType == 'Likert-Person') {\n            html += likertTemplateEnd;\n          }\n\n          questionHtml = `<div><h2>Please provide any additional comments below:</h2><br><label for=\"html\">${questionText}</label><br><textarea rows=\"3\" cols=\"50\" name=\"additionalComments${questionNumber}\" placeholder=\"...\"></textarea></div>`;\n\n          html += questionHtml;\n\n          questions.push(`(${name}) ${questionText.toString()}*`);\n        }\n        else {\n          //If there was unexpected input then give a basic error message. This does nothing in Power Automate currently. \n          console.log('Unexpected Input Error');\n        }\n\n        lastQuestionType = questionType.toString();\n      }\n\n      peopleCount++;\n    }\n  }\n\n  html += htmlTemplateEnd;\n  console.log(html);\n\n  //return the html for the survey and the list of numerated questions.\n  return [html, questions];\n}","description":"","parameterInfo":"{\"originalParameterOrder\":[{\"name\":\"moduleId\",\"index\":0},{\"name\":\"surveyType\",\"index\":1},{\"name\":\"academicYear\",\"index\":2}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"moduleId\",\"surveyType\",\"academicYear\"],\"properties\":{\"moduleId\":{\"type\":\"string\",\"default\":\"CMP6002B\"},\"surveyType\":{\"type\":\"number\",\"default\":1},\"academicYear\":{\"type\":\"string\",\"default\":\"2021-2022\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"array\",\"items\":{}}}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}